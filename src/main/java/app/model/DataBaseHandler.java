package app.model;import app.entities.User;import java.sql.*;import java.util.ArrayList;import static app.model.Const.*;public class DataBaseHandler extends dbConfig {    Connection dbConnection;    public Connection getDbConnection() throws ClassNotFoundException, SQLException {        String connectionString = "jdbc:mysql://" + dbHost + ":" + dbPort + "/" + dbName + dbTimeZone;        //Class.forName("com.mysql.jdbc.Driver");        dbConnection = DriverManager.getConnection(connectionString, dbUser, dbPassword);        return dbConnection;    }    public void signUpUser(User user) throws SQLException, ClassNotFoundException {        String insert = "INSERT INTO " + Const.USER_TABLE + "("+ USER_NAME + "," + Const.USER_PASSWORD + ")" + "VALUES(?,?)";        PreparedStatement prSt = getDbConnection().prepareStatement(insert);        prSt.setString(1,user.getName());        prSt.setString(2,user.getPassword());        System.out.print("ДОШЛО!!!!");        prSt.executeUpdate();    }    public ArrayList<String> getAllUserNames() throws SQLException, ClassNotFoundException {        String show = "SELECT " + USER_NAME + " FROM " + USER_TABLE;        Statement statement = getDbConnection().createStatement();        ResultSet resultSet = statement.executeQuery(show);        ArrayList<String> names = new ArrayList<>();        while(resultSet.next()) {            String name = resultSet.getString(1);            names.add(name);        }        return names;    }    public boolean existUser(User user) throws SQLException, ClassNotFoundException {        String show = "SELECT " + USER_NAME + ", " + USER_PASSWORD + " FROM " + USER_TABLE;        Statement statement = getDbConnection().createStatement();        ResultSet resultSet = statement.executeQuery(show);        ArrayList<User> users = new ArrayList<>();        while (resultSet.next()) {            String name = resultSet.getString(1);            String password = resultSet.getString(2);            users.add(new User (name, password));        }        if(users.indexOf(user) != -1)            return true;        else            return false;    }}